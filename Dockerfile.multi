# 多階段構建Dockerfile
# 第一階段：構建階段
FROM registry.cn-hangzhou.aliyuncs.com/library/maven:3.9.5-jdk-17 AS builder

# 設置工作目錄
WORKDIR /build

# 複製Maven配置文件
COPY pom.xml .
COPY .mvn .mvn
COPY mvnw .

# 下載依賴（利用Docker層緩存）
RUN ./mvnw dependency:go-offline -B

# 複製源代碼
COPY src src

# 構建應用
RUN ./mvnw clean package -DskipTests

# 第二階段：運行階段
FROM registry.cn-hangzhou.aliyuncs.com/library/java:17-jre-slim

# 安裝curl用於健康檢查
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# 設置工作目錄
WORKDIR /app

# 從構建階段複製JAR文件
COPY --from=builder /build/target/*.jar app.jar

# 設置環境變量
ENV SPRING_PROFILES_ACTIVE=production
ENV SERVER_PORT=8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# 暴露端口
EXPOSE 8080

# 健康檢查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# 啟動應用
CMD ["java", "-jar", "app.jar"]
